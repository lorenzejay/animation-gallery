import { useState } from "react";
import Head from "next/head";

import {
  AnimatePresence,
  motion,
  Reorder,
  useAnimationControls,
  useMotionValue,
  useMotionValueEvent,
} from "framer-motion";
import Layout from "@/components/Layout";
import Link from "next/link";
import ImageAnimation from "@/components/ImageAnimation";
import { useAppDispatch, useAppState } from "@/utils/appReducer";

const CARD_OFFSET = 10;
const SCALE_FACTOR = 0.06;
export default function Home() {
  const { orderedGallery } = useAppState();
  const dispatch = useAppDispatch();
  // const x = useMotionValue(0);
  // useMotionValueEvent(x, "change", (latest) => {
  //   console.log("x changed to", latest);
  // });
  const [titleTextDelayDuration, setTitleTextDelayDuration] = useState(1.5);
  const [testingAnimation, setTestingAnimation] = useState("");
  const variants = {
    bringToBack: (zIndex: number) => ({
      opacity: 0.8,
      zIndex,
      rotate: 4,
    }),
    bringToFront: (zIndex: number) => ({
      opacity: 1,
      rotate: 0,
      zIndex,
    }),
  };
  const animation1 = useAnimationControls();
  const animation2 = useAnimationControls();
  const animation3 = useAnimationControls();
  const animation4 = useAnimationControls();
  const animation5 = useAnimationControls();

  const [showNumber, setShowNumber] = useState(0);
  console.log("showNumber", showNumber);

  const [animationNumber, setAnimationNumber] = useState(animation1);

  async function sequence5() {
    await animation5.start({ opacity: 1 });

    await animation5.start({ x: 0 });
    return await animation5.start({ rotate: 10 });
  }
  async function sequence1() {
    await animation1.start({ opacity: 1 });

    return await animation1.start({ x: 0 });
    // return await animation1.start({ rotate: 10 });
  }
  async function sequence2() {
    await animation2.start({ opacity: 1 });

    await animation2.start({ x: 0 });
    return await animation2.start({ rotate: -10 });
  }
  async function sequence3() {
    await animation3.start({ opacity: 1 });
    await animation3.start({ x: 0 });
    return await animation3.start({ rotate: 20 });
  }
  async function sequence4() {
    await animation4.start({ opacity: 1 });
    await animation4.start({ x: 0 });
    return await animation5.start({ rotate: -20 });
  }

  function moveToEnd() {
    const copyOrder = [...orderedGallery];
    copyOrder.push(copyOrder.shift() as any) as any;
    dispatch({ type: "GALLERY_REORDERED", reorderedGallery: [...copyOrder] });
    // setOrdered([...copyOrder]);
  }
  function reverseMove() {
    const copyOrder = [...orderedGallery];
    copyOrder.unshift(copyOrder.pop() as any) as any;
    dispatch({ type: "GALLERY_REORDERED", reorderedGallery: [...copyOrder] });
    // setOrdered([...copyOrder]);
  }
  console.log("orderedGallery", orderedGallery);
  return (
    <>
      <motion.div
        className="overflow-hidden"
        style={{ background: orderedGallery[0].background }}
        variants={{
          initial: {
            background: "#6d7671",
            opacity: 0.9,
          },
          animate: {
            background: orderedGallery[0].background,
            opacity: 1,
          },
          exit: {
            opacity: 0,
            transition: { duration: 5, delay: 2 },
          },
        }}
        animate={"animate"}
        exit="exit"
        transition={{ duration: 0.5 }}
      >
        <Head>
          <title>Artist Studio</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className="relative flex items-center justify-center h-screen w-full text-white font-medium">
          <div className="absolute left-12 text-xl lg:space-y-2s">
            <AnimatePresence>
              <motion.div
                initial={{ opacity: 0, x: -500 }}
                animate={{ x: 0, opacity: 1 }}
                transition={{
                  duration: 0.5,
                  delay: 1.5,
                }}
                exit={{ y: 200 }}
              >
                0{showNumber + 1}
              </motion.div>
              <motion.div
                className="w-1 mx-auto h-32"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{
                  delay: 1.5,
                }}
              >
                <motion.div
                  className="bg-white"
                  key={showNumber}
                  initial={"initial"}
                  animate={"animate"}
                  // custom={(showNumber / 5) * 100 }
                  transition={{
                    delay: 1.5,
                    duration: 0.4,
                    type: "spring",
                  }}
                  variants={{
                    initial: {
                      height: `${((showNumber + 1) / 5) * 100}%`,
                    },
                    animate: () => ({
                      height: `${((showNumber + 1) / 5) * 100}%`,
                    }),
                  }}
                ></motion.div>
              </motion.div>
              {/* <div>{showNumber + 1}</div> */}
              <motion.div
                initial={{ opacity: 0, x: -500 }}
                animate={{ x: 0, opacity: 1 }}
                transition={{
                  duration: 0.5,
                  delay: 1.5,
                }}
              >
                05
              </motion.div>
            </AnimatePresence>
          </div>
          <motion.div className="flex flex-col md:flex-row items-center justify-between w-full lg:w-[1000px] h-[50vh] space-y-12 md:space-y-0 mx-auto absolute text-white">
            <AnimatePresence>
              <motion.button
                className="flex items-center space-x-2"
                initial={{ opacity: 0, y: 400 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 1.5 }}
                onClick={() => {
                  setShowNumber((prev) => {
                    if (prev === 0) return prev;

                    // prev - 1;
                    reverseMove();
                    return prev - 1;
                  });
                }}
              >
                <motion.div className="uppercase text-3xl font-thin tracking-[0.2rem]">
                  prev
                </motion.div>
                <motion.div className="border-t-2 w-16"></motion.div>
              </motion.button>
            </AnimatePresence>

            <AnimatePresence>
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ x: 200 }}
                transition={{ duration: 0.75 }}
                className="relative h-[50vh] w-full flex items-center justify-center flex-grow"
              >
                {orderedGallery.map((n, i) => {
                  return (
                    <ImageAnimation
                      n={n}
                      i={i}
                      ordered={orderedGallery}
                      key={i}
                    />
                  );
                })}
              </motion.div>
            </AnimatePresence>
            <AnimatePresence>
              <motion.button
                className="flex items-center space-x-2"
                initial={{ opacity: 0, y: 400 }}
                animate={{ opacity: 1, y: 0, scale: 1 - 0 * 0.06 }}
                transition={{ delay: 1.5 }}
                onClick={() => {
                  setTitleTextDelayDuration(0.15);
                  setTestingAnimation("bringToFront");
                  setShowNumber((prev) => {
                    if (prev === orderedGallery.length - 1) {
                      return prev;
                    }
                    moveToEnd();
                    return prev + 1;
                  });
                }}
              >
                <motion.div className="border-t-2 w-16"></motion.div>
                <div className="uppercase text-3xl font-thin tracking-[0.2rem]">
                  Next
                </div>
              </motion.button>
            </AnimatePresence>
          </motion.div>

          <AnimatePresence>
            <motion.div
              className="absolute -bottom-6 lg:-bottom-20 3xl:-bottom-40 "
              initial={{ y: 100, opacity: 0 }}
              animate={{
                y: 0,
                opacity: 0.5,
              }}
              exit={{
                opacity: 0,
                y: -100,
                transition: { delay: 0, duration: 0.45 },
              }}
              transition={{ ease: "easeIn", delay: titleTextDelayDuration }}
              key={orderedGallery[0].type}
            >
              <motion.h2 className="z-[100] text-7xl sm:text-[128px] 3xl:text-[236px] text-white tracking-[0.3rem] capitalize">
                {orderedGallery[0].type}
              </motion.h2>
            </motion.div>
          </AnimatePresence>
        </main>
      </motion.div>
    </>
  );
}

Home.getLayout = function getLayout(page: any) {
  return <Layout>{page}</Layout>;
};
